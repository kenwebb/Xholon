<?xml version="1.0" encoding="UTF-8"?>
<!--
Process the data I queried from the postgresql database:
select trunc(distance_kilometers, 1) as km, count(*) from distance
where distance_kilometers < 20.0
group by trunc(distance_kilometers, 1)
order by trunc(distance_kilometers, 1) asc;

To use this module in the BGCO app:
 - drag the entire contents into the Houses node
 - result: all houses within the Houses container will have a distance value (ex: house.distkm = 1.3)
 -  distkm is the distance in km between a Clubhouse and a House
-->
<XholonModule>
  <XholonMap>
  
    <Attribute_String roleName="ih"><![CDATA[
<_-.XholonClass>
  <HouseDistance/>
</_-.XholonClass>
    ]]></Attribute_String>
    
    <Attribute_String roleName="cd"><![CDATA[
<xholonClassDetails>
  
</xholonClassDetails>
    ]]></Attribute_String>
    
    <Attribute_String roleName="csh"><![CDATA[
<HouseDistance>
  <script>

/**
 * Calculate the sum of all member count values.
 * @param A JavaScript array of distance data, containing CSV line items (ex: 0.0,563).
 * @return the calculated sum (ex: 17451)
 */
this.sumMemberCounts = function(ddstr) {
  var sum = 0;
  var ddarr = ddstr.split("\n");
  // skip header line
  for (var i = 1; i &lt; ddarr.length; i++) {
    var dditem = ddarr[i].split(",");
    var count = Number(dditem[1]);
    sum += count;
  }
  return sum;
}

/**
 * Calculate the probability for any House that it will be a given distance from the Clubhouse.
 * For each km,count row:
 *  divide the count for that row by totalMemberCounts (ex: 563/17451)
 * The sum of all probabilities should be (nearly) exactly 1.0 .
 * @param A JavaScript array, containing CSV line items (ex: 0.0,563).
 * @param The previously calculated totalMemberCounts (ex: 17451).
 */
this.calcProbs = function(ddstr, totalMemberCounts) {
  var psum = 0.0;
  var prefix = ""; //"\n"; // prevent having a comma the first time through
  var ddarr = ddstr.split("\n");
  // skip header line
  for (var i = 1; i &lt; ddarr.length; i++) {
    var dditem = ddarr[i].split(",");
    var count = Number(dditem[1]);
    var pval = count / totalMemberCounts;
    psum += pval;
    this.keysCsvStr += prefix + String(psum);
    this.valsCsvStr += prefix + dditem[0];
    prefix = ","; //",\n";
  }
  this.println("totalProbs: " + psum + "\n"); // 1.0000000000000004
}

/**
 * Find a distance in km, by sampling a random distribution.
 * https://stackoverflow.com/questions/6553970/find-the-first-element-in-a-sorted-array-that-is-greater-than-the-target
 */
this.findDistance = function() {
  var low = 0;
  var high = this.keysArr.length;
  var target = Math.random();
  while (low != high) {
    var mid = (low + high) / 2;
    if (this.keysArr[mid] &lt;= target) {
      low = mid + 1;
    }
    else {
      high = mid;
    }
  }
  // low = mid = high
  //this.println("found: " + target + " " + low + " " + mid + " " + high + " " + this.keysArr[mid] + " distance in km: " + this.valsArr[mid]);
  return this.valsArr[mid];
}

var container = this.parent();
this.println("\nCalculating distance probabilities");
container.println(container.name());
var distanceDataNode = this.next();
var distanceData = distanceDataNode.text();

var totalMemberCounts = this.sumMemberCounts(distanceData);
container.println("totalMemberCounts: " + totalMemberCounts); // 17451

this.probsProcessCsvStr = '&lt;Attribute_String roleName="probabilities">\n';
this.keysCsvStr = "";
this.valsCsvStr = "";
this.calcProbs(distanceData, totalMemberCounts);

this.keysValsJsonStr = '{\n"keys":\n[' + this.keysCsvStr + '],\n"vals":\n[' + this.valsCsvStr + ']\n}\n';
this.probsProcessCsvStr += this.keysValsJsonStr;
this.probsProcessCsvStr += '&lt;/Attribute_String>\n';
container.println(this.probsProcessCsvStr);
container.append(this.probsProcessCsvStr); // save data

var probabilitiesNode = distanceDataNode.next(); // load the saved data
var ptxt = probabilitiesNode.text();
var pobj = $wnd.JSON.parse(ptxt);
$wnd.console.log(pobj);

this.keysArr = pobj.keys;
this.valsArr = pobj.vals;
var resultArr = [];
var house = container.parent().first();
while (house) {
  if (house.xhc().name() == "House") {
    var distkm = this.findDistance();
    resultArr.push(distkm);
    house.distkm = distkm;
    //$wnd.console.log(house);
  }
  house = house.next();
}
this.println("resulting house distances in km:\n" + resultArr);

this.remove();
container.remove();
//# sourceURL=HouseDistance.js
  </script>
  
  <!-- result of postgresql query, from distance.txt BGCO data -->
  <Attribute_String roleName="distanceData">
km,count
0.0,563
0.1,485
0.2,1070
0.3,377
0.4,794
0.5,1158
0.6,580
0.7,513
0.8,688
0.9,952
1.0,430
1.1,397
1.2,173
1.3,207
1.4,454
1.5,158
1.6,160
1.7,196
1.8,205
1.9,140
2.0,103
2.1,192
2.2,172
2.3,186
2.4,161
2.5,139
2.6,144
2.7,202
2.8,125
2.9,142
3.0,165
3.1,142
3.2,154
3.3,122
3.4,67
3.5,58
3.6,92
3.7,117
3.8,63
3.9,72
4.0,79
4.1,82
4.2,103
4.3,106
4.4,83
4.5,81
4.6,85
4.7,84
4.8,51
4.9,147
5.0,92
5.1,116
5.2,86
5.3,89
5.4,41
5.5,49
5.6,61
5.7,69
5.8,87
5.9,72
6.0,40
6.1,45
6.2,53
6.3,68
6.4,28
6.5,32
6.6,52
6.7,48
6.8,35
6.9,31
7.0,36
7.1,27
7.2,47
7.3,53
7.4,51
7.5,40
7.6,64
7.7,28
7.8,37
7.9,148
8.0,33
8.1,31
8.2,27
8.3,43
8.4,36
8.5,57
8.6,46
8.7,31
8.8,40
8.9,33
9.0,72
9.1,67
9.2,49
9.3,67
9.4,54
9.5,30
9.6,49
9.7,73
9.8,58
9.9,38
10.0,57
10.1,36
10.2,48
10.3,49
10.4,29
10.5,21
10.6,38
10.7,38
10.8,20
10.9,17
11.0,17
11.1,36
11.2,24
11.3,24
11.4,24
11.5,23
11.6,22
11.7,34
11.8,13
11.9,13
12.0,13
12.1,9
12.2,16
12.3,21
12.4,18
12.5,11
12.6,13
12.7,10
12.8,17
12.9,11
13.0,16
13.1,13
13.2,13
13.3,16
13.4,24
13.5,18
13.6,18
13.7,17
13.8,7
13.9,22
14.0,23
14.1,20
14.2,20
14.3,19
14.4,19
14.5,20
14.6,13
14.7,12
14.8,16
14.9,7
15.0,17
15.1,18
15.2,12
15.3,21
15.4,15
15.5,10
15.6,19
15.7,7
15.8,20
15.9,19
16.0,8
16.1,18
16.2,10
16.3,9
16.4,8
16.5,5
16.6,7
16.7,5
16.8,6
16.9,6
17.0,9
17.1,10
17.2,11
17.3,8
17.4,6
17.5,9
17.6,8
17.7,4
17.8,9
17.9,11
18.0,9
18.1,4
18.2,6
18.3,12
18.4,7
18.5,7
18.6,11
18.7,10
18.8,16
18.9,8
19.0,6
19.1,12
19.2,14
19.3,10
19.4,14
19.5,12
19.6,6
19.7,10
19.8,12
19.9,7
  </Attribute_String>
  
</HouseDistance>
    ]]></Attribute_String>
    
  </XholonMap>
</XholonModule>
